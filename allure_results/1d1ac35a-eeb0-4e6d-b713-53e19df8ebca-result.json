{"name": "Проверка принятия заказа с несуществующим id курьера", "status": "failed", "statusDetails": {"message": "AssertionError: 404 and {'code': 404, 'message': 'Курьера с таким id не существует'}\nassert (404 == 404 and {'code': 404,...е существует'} == {'message': '...е существует'}\n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  {'code': 404}\n  Use -v to get more diff)", "trace": "self = <test_order.test_accept_order.TestAcceptOrder object at 0x10e4c1810>, order_id = 253089\n\n    @allure.title('Проверка принятия заказа с несуществующим id курьера')\n    @allure.description('BUG: Тело ответа не совпадают с документацией')\n    def test_accept_order_with_non_existent_login_id(self, order_id):\n        self.accept_order.put_request(0, order_id)\n        response_status_code = self.accept_order.check_response_status_code()\n        response_text = self.accept_order.check_response_text()\n        ErrorSchema.parse_obj(response_text)\n>       assert response_status_code == 404 and response_text == {\n            \"message\": \"Курьера с таким id не существует\"}, f'{response_status_code} and {response_text}'\nE       AssertionError: 404 and {'code': 404, 'message': 'Курьера с таким id не существует'}\nE       assert (404 == 404 and {'code': 404,...е существует'} == {'message': '...е существует'}\nE         Omitting 1 identical items, use -vv to show\nE         Left contains 1 more item:\nE         {'code': 404}\nE         Use -v to get more diff)\n\ntests/test_order/test_accept_order.py:54: AssertionError"}, "description": "BUG: Тело ответа не совпадают с документацией", "steps": [{"name": "Принимаем заказ с id заказа и id курьера ", "status": "passed", "parameters": [{"name": "courier_id", "value": "0"}, {"name": "order_id", "value": "253089"}], "start": 1710008552653, "stop": 1710008552853}, {"name": "Получаем статус код", "status": "passed", "start": 1710008552853, "stop": 1710008552853}, {"name": "Получаем содержимое ответа", "status": "passed", "start": 1710008552853, "stop": 1710008552853}], "start": 1710008552652, "stop": 1710008552854, "uuid": "16ab7134-53a0-4049-a1f9-b0bb96e59f99", "historyId": "34e3181e13636e971d9c3bf0cadf1d33", "testCaseId": "34e3181e13636e971d9c3bf0cadf1d33", "fullName": "tests.test_order.test_accept_order.TestAcceptOrder#test_accept_order_with_non_existent_login_id", "labels": [{"name": "parentSuite", "value": "tests.test_order"}, {"name": "suite", "value": "test_accept_order"}, {"name": "subSuite", "value": "TestAcceptOrder"}, {"name": "host", "value": "MBP-MacbookPro"}, {"name": "thread", "value": "5607-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order.test_accept_order"}]}