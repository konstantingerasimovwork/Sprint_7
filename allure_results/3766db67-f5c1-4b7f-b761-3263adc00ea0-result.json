{"name": "Проверка логина курьера в системе без login", "status": "failed", "statusDetails": {"message": "AssertionError: Статус код - 400 и текст ответа - {'code': 400, 'message': 'Недостаточно данных для входа'}\nassert (400 == 400 and {'code': 400,...ых для входа'} == {'message': '...ых для входа'}\n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  {'code': 400}\n  Use -v to get more diff)", "trace": "self = <test_courier.test_login_courier.TestLoginCourier object at 0x10e4ad0d0>, register_new_courier_and_return_login_password = ['xwmyzpnohz', 'rfpgftqymg', 'hnywuqhfyn']\n\n    @allure.title('Проверка логина курьера в системе без login')\n    @allure.description('BUG: Тело ответа не совпадает с документацией')\n    def test_get_error_without_login(self, register_new_courier_and_return_login_password):\n        payload = {\n            \"password\": register_new_courier_and_return_login_password[1]\n        }\n        self.login_courier.post_request(payload)\n        response_status_code = self.login_courier.check_response_status_code()\n        response_text = self.login_courier.check_response_text()\n        PostErrorSchema.parse_obj(response_text)\n>       assert response_status_code == 400 and response_text == {\n            \"message\": \"Недостаточно данных для входа\"}, f'Статус код - {response_status_code} и текст ответа - {response_text}'\nE       AssertionError: Статус код - 400 и текст ответа - {'code': 400, 'message': 'Недостаточно данных для входа'}\nE       assert (400 == 400 and {'code': 400,...ых для входа'} == {'message': '...ых для входа'}\nE         Omitting 1 identical items, use -vv to show\nE         Left contains 1 more item:\nE         {'code': 400}\nE         Use -v to get more diff)\n\ntests/test_courier/test_login_courier.py:68: AssertionError"}, "description": "BUG: Тело ответа не совпадает с документацией", "steps": [{"name": "Логин курьера в системе", "status": "passed", "parameters": [{"name": "payload", "value": "{'password': 'rfpgftqymg'}"}], "start": 1710008477480, "stop": 1710008477700}, {"name": "Получаем статус код", "status": "passed", "start": 1710008477700, "stop": 1710008477700}, {"name": "Получаем содержимое ответа", "status": "passed", "start": 1710008477700, "stop": 1710008477700}], "start": 1710008477480, "stop": 1710008477701, "uuid": "28adb35f-405a-4c54-9b4d-760c47646325", "historyId": "2872aa6fb1c9ff6ad68ea969a6282645", "testCaseId": "2872aa6fb1c9ff6ad68ea969a6282645", "fullName": "tests.test_courier.test_login_courier.TestLoginCourier#test_get_error_without_login", "labels": [{"name": "parentSuite", "value": "tests.test_courier"}, {"name": "suite", "value": "test_login_courier"}, {"name": "subSuite", "value": "TestLoginCourier"}, {"name": "host", "value": "MBP-MacbookPro"}, {"name": "thread", "value": "5607-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_courier.test_login_courier"}]}