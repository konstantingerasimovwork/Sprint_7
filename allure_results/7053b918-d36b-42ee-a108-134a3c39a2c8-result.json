{"name": "Проверка удаления курьера с невалидным id", "status": "failed", "statusDetails": {"message": "AssertionError: Статус код - 404 и текст ответа - {'code': 404, 'message': 'Курьера с таким id нет.'}\nassert (404 == 404 and {'code': 404,...аким id нет.'} == {'message': '...таким id нет'}\n  Differing items:\n  {'message': 'Курьера с таким id нет.'} != {'message': 'Курьера с таким id нет'}\n  Left contains 1 more item:\n  {'code': 404}\n  Use -v to get more diff)", "trace": "self = <test_courier.test_delete_courier.TestCreateOrder object at 0x10e4591d0>\n\n    @allure.title('Проверка удаления курьера с невалидным id')\n    @allure.description('BUG: Тело ответа не совпадает с документацией')\n    def test_delete_courier_with_invalid_id(self):\n        payload = {\n            \"id\": 3\n        }\n        self.delete_courier.delete_request(3, payload)\n        response_status_code = self.delete_courier.check_response_status_code()\n        response_text = self.delete_courier.check_response_text()\n        ErrorSchema.parse_obj(response_text)\n>       assert response_status_code == 404 and response_text == {\n            \"message\": \"Курьера с таким id нет\"}, f'Статус код - {response_status_code} и текст ответа - {response_text}'\nE       AssertionError: Статус код - 404 и текст ответа - {'code': 404, 'message': 'Курьера с таким id нет.'}\nE       assert (404 == 404 and {'code': 404,...аким id нет.'} == {'message': '...таким id нет'}\nE         Differing items:\nE         {'message': 'Курьера с таким id нет.'} != {'message': 'Курьера с таким id нет'}\nE         Left contains 1 more item:\nE         {'code': 404}\nE         Use -v to get more diff)\n\ntests/test_courier/test_delete_courier.py:62: AssertionError"}, "description": "BUG: Тело ответа не совпадает с документацией", "steps": [{"name": "Удаляем курьера", "status": "passed", "parameters": [{"name": "id", "value": "3"}, {"name": "payload", "value": "{'id': 3}"}], "start": 1710008475516, "stop": 1710008475705}, {"name": "Получаем статус код", "status": "passed", "start": 1710008475705, "stop": 1710008475705}, {"name": "Получаем содержимое ответа", "status": "passed", "start": 1710008475705, "stop": 1710008475705}], "start": 1710008475516, "stop": 1710008475706, "uuid": "44d9d221-af51-423e-8814-0c32e4c1aa0a", "historyId": "fbee74e99d0897941cd09a0fce7f9353", "testCaseId": "fbee74e99d0897941cd09a0fce7f9353", "fullName": "tests.test_courier.test_delete_courier.TestCreateOrder#test_delete_courier_with_invalid_id", "labels": [{"name": "parentSuite", "value": "tests.test_courier"}, {"name": "suite", "value": "test_delete_courier"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "MBP-MacbookPro"}, {"name": "thread", "value": "5607-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_courier.test_delete_courier"}]}