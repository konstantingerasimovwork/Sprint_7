{"name": "Проверка создания двух одинаковых курьеров", "status": "failed", "statusDetails": {"message": "AssertionError: Статус код - 409 и текст ответа - {'code': 409, 'message': 'Этот логин уже используется. Попробуйте другой.'}\nassert (409 == 409 and {'code': 409,...уйте другой.'} == {'message': '...уйте другой.'}\n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  {'code': 409}\n  Use -v to get more diff)", "trace": "self = <test_courier.test_create_new_courier.TestRegisterCourier object at 0x10db79dd0>\n\n    @allure.title('Проверка создания двух одинаковых курьеров')\n    @allure.description('BUG: Body ответа не совпадает с документацией')\n    def test_register_identical_couriers(self):\n        login, password, first_name = new_login_and_password()\n        payload = {\n            \"login\": login,\n            \"password\": password,\n            \"firstName\": first_name\n        }\n        self.new_courier.post_request(payload)\n        self.new_courier.post_request(payload)\n        response_text = self.new_courier.check_response_text()\n        response_status_code = self.new_courier.check_response_status_code()\n        PostErrorSchema.parse_obj(response_text)\n>       assert response_status_code == 409 and response_text == {\n            \"message\": \"Этот логин уже используется. Попробуйте другой.\"}, f'Статус код - {response_status_code} и текст ответа - {response_text}'\nE       AssertionError: Статус код - 409 и текст ответа - {'code': 409, 'message': 'Этот логин уже используется. Попробуйте другой.'}\nE       assert (409 == 409 and {'code': 409,...уйте другой.'} == {'message': '...уйте другой.'}\nE         Omitting 1 identical items, use -vv to show\nE         Left contains 1 more item:\nE         {'code': 409}\nE         Use -v to get more diff)\n\ntests/test_courier/test_create_new_courier.py:42: AssertionError"}, "description": "BUG: Body ответа не совпадает с документацией", "steps": [{"name": "Создаём курьера", "status": "passed", "parameters": [{"name": "payload", "value": "{'login': 'afmiaksbbp', 'password': 'lpilsqrfpd', 'firstName': 'mjxmtefyaf'}"}], "start": 1710008473175, "stop": 1710008473424}, {"name": "Создаём курьера", "status": "passed", "parameters": [{"name": "payload", "value": "{'login': 'afmiaksbbp', 'password': 'lpilsqrfpd', 'firstName': 'mjxmtefyaf'}"}], "start": 1710008473424, "stop": 1710008473678}, {"name": "Получаем содержимое ответа", "status": "passed", "start": 1710008473678, "stop": 1710008473678}, {"name": "Получаем статус код", "status": "passed", "start": 1710008473678, "stop": 1710008473678}], "start": 1710008473175, "stop": 1710008473679, "uuid": "2aa43e18-785a-4c6e-8522-b5e2c27368c2", "historyId": "bd4fbbf6fed6a5edbffdc7eb79682d47", "testCaseId": "bd4fbbf6fed6a5edbffdc7eb79682d47", "fullName": "tests.test_courier.test_create_new_courier.TestRegisterCourier#test_register_identical_couriers", "labels": [{"name": "parentSuite", "value": "tests.test_courier"}, {"name": "suite", "value": "test_create_new_courier"}, {"name": "subSuite", "value": "TestRegisterCourier"}, {"name": "host", "value": "MBP-MacbookPro"}, {"name": "thread", "value": "5607-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_courier.test_create_new_courier"}]}