{"name": "Проверка создания курьера без login", "status": "failed", "statusDetails": {"message": "AssertionError: Статус код - 400 и текст ответа - {'code': 400, 'message': 'Недостаточно данных для создания учетной записи'}\nassert (400 == 400 and {'code': 400,...етной записи'} == {'message': '...етной записи'}\n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  {'code': 400}\n  Use -v to get more diff)", "trace": "self = <test_courier.test_create_new_courier.TestRegisterCourier object at 0x10e441950>\n\n    @allure.title('Проверка создания курьера без login')\n    @allure.description('BUG: Body ответа не совпадает с документацией')\n    def test_register_without_login(self):\n        login, password, first_name = new_login_and_password()\n        payload = {\n            \"password\": password,\n            \"firstName\": first_name\n        }\n        self.new_courier.post_request(payload)\n        response_text = self.new_courier.check_response_text()\n        response_status_code = self.new_courier.check_response_status_code()\n        PostErrorSchema.parse_obj(response_text)\n>       assert response_status_code == 400 and response_text == {\n            \"message\": \"Недостаточно данных для создания учетной записи\"}, f'Статус код - {response_status_code} и текст ответа - {response_text}'\nE       AssertionError: Статус код - 400 и текст ответа - {'code': 400, 'message': 'Недостаточно данных для создания учетной записи'}\nE       assert (400 == 400 and {'code': 400,...етной записи'} == {'message': '...етной записи'}\nE         Omitting 1 identical items, use -vv to show\nE         Left contains 1 more item:\nE         {'code': 400}\nE         Use -v to get more diff)\n\ntests/test_courier/test_create_new_courier.py:58: AssertionError"}, "description": "BUG: Body ответа не совпадает с документацией", "steps": [{"name": "Создаём курьера", "status": "passed", "parameters": [{"name": "payload", "value": "{'password': 'mpmkghwvii', 'firstName': 'qvtulcxwjz'}"}], "start": 1710008473810, "stop": 1710008474007}, {"name": "Получаем содержимое ответа", "status": "passed", "start": 1710008474008, "stop": 1710008474008}, {"name": "Получаем статус код", "status": "passed", "start": 1710008474008, "stop": 1710008474008}], "start": 1710008473810, "stop": 1710008474008, "uuid": "a745e4be-cf1b-41a6-9171-3cd885b34eba", "historyId": "e9089d892cd569d9b2757fed500fb8b7", "testCaseId": "e9089d892cd569d9b2757fed500fb8b7", "fullName": "tests.test_courier.test_create_new_courier.TestRegisterCourier#test_register_without_login", "labels": [{"name": "parentSuite", "value": "tests.test_courier"}, {"name": "suite", "value": "test_create_new_courier"}, {"name": "subSuite", "value": "TestRegisterCourier"}, {"name": "host", "value": "MBP-MacbookPro"}, {"name": "thread", "value": "5607-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_courier.test_create_new_courier"}]}